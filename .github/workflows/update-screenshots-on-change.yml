name: Update Screenshots on Code Change

on:
  push:
    branches: [main, master]

env:
  UPDATE_SCREENSHOTS: "true"

jobs:
  update-screenshots:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          playwright install
          playwright install-deps

      - name: Run tests in screenshot update mode
        run: pytest --browser chromium

      - name: Prepare screens branch
        run: |
          # Настройка Git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          mkdir -p temp-screenshots
          if find . -path "*/screenshots/reference/*.png" -exec cp --parents {} temp-screenshots \; ; then
            echo "Скриншоты успешно скопированы во временную папку"
          else
            echo "Ошибка: не найдены скриншоты для копирования"
            exit 1
          fi

          # Проверяем наличие скриншотов
          if [ -z "$(ls -A temp-screenshots)" ]; then
            echo "Ошибка: временная папка пуста"
            exit 1
          fi

          # Работа с веткой screens
          if git show-ref --quiet refs/heads/screens; then
            git checkout screens
            # Полностью очищаем ветку, кроме .git
            find . -mindepth 1 ! -name '.git' -exec rm -rf {} +
          else
            git checkout --orphan screens
          fi

          # Копируем скриншоты
          if [ -d "temp-screenshots" ]; then
            cp -r temp-screenshots/* ./
            echo "Скриншоты успешно перемещены"
          else
            echo "Ошибка: временная папка не существует"
            exit 1
          fi

          # Очистка
          rm -rf temp-screenshots __pycache__ allure-results

          # Коммит
          git add .
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Auto-update reference screenshots"
            git push origin screens --force
            echo "Изменения успешно отправлены"
          else
            echo "Нет изменений для коммита"
          fi
